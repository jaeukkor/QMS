package com.qms.user.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.qms.table.vo.user.UserInfoVO;
import com.qms.user.service.UserService;
import com.qms.user.vo.UserVO;
import com.qms.util.Constant;


@Controller
public class UserController {

	@Autowired
	UserService service;
	
	
	@RequestMapping("/user/searchlist")
	@ResponseBody
	public UserVO searchlist(@ModelAttribute("UserVO") UserVO vo) throws Exception {
		vo.setComGrpCd(Constant.POSITION_CD);
		int totalPage = service.selectTotalUserCount(vo); 

		List<UserInfoVO> list = service.selectUserList(vo);
		
		vo.setUserlist(list);
		vo.setTotal(totalPage); //총 데이터수.
		vo.setStartPage(vo.getStartPage()); 
		vo.setCurrentPage(vo.getCurrentPage());//현재페이지

		
		return vo;
				
	}
	
    /*@PostMapping("/user/exportToExcel")
    @ResponseBody
    public ResponseEntity<byte[]> exportToExcel(HttpServletRequest request) {
        try {
            // 엑셀로 내보낼 데이터를 조회합니다.
        	UserVO vo = new UserVO();
        	vo.setComGrpCd(Constant.POSITION_CD);
            List<UserVO> userList = service.selectUserListTOexcel(vo);

            // 엑셀 파일을 생성합니다.
            ByteArrayOutputStream out = new ByteArrayOutputStream();
            service.createExcelFile(userList, out);

            byte[] excelBytes = out.toByteArray();

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);
            headers.setContentDispositionFormData("attachment", "user_data.xlsx");
            headers.setContentLength(excelBytes.length);

            return ResponseEntity.ok()
                    .headers(headers)
                    .body(excelBytes);
        } catch (Exception e) {
            // 실패 시 오류 메시지를 생성하여 반환합니다.
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
        }
    } */
	
	

	
	
	
}
